@page "/ParallelAsync"
@using System.Diagnostics

<div class="row">
    <div class="col-md-3">
        <h2>.Net6 CONSOLE </h2>
        <button class="btn btn-primary" @onclick="HandleNet6Console">Start</button>
    </div>
</div>


@code {
    private async Task HandleNet6Console()
    {
        Stopwatch stopWatch = new();
        stopWatch.Start();
        
        Console.WriteLine("Begin! Parallel Async .Net6.0:");

        List<string> names = new() { "Felipe", "Claudia", "Robert", "Rajan" };

        ParallelOptions paralleloptions = new(){ MaxDegreeOfParallelism = 3};
        // _ = token
        await Parallel.ForEachAsync(names, paralleloptions, async (name, _) =>
        {
            await DoValidationsConsole(name);
        });
        
        stopWatch.Stop();
        Console.WriteLine(string.Concat($"Duration: {stopWatch.Elapsed.Seconds} seconds", "\r\nThe End!"));
    }
    private async Task DoValidationsConsole(string name)
    {
        await Method1Console(name);
        await Method2Console(name);
        await Method3Console(name);
        await Method4Console(name);   
    }
    private async Task Method1Console(string name)
    {
        await Task.Delay(500);
        Console.WriteLine($"Method 1 {name}");
    }
    private async Task Method2Console(string name)
    {
        await Task.Delay(500);
        Console.WriteLine($"Method 2 {name}");
    }
    private async Task Method3Console(string name)
    {
        await Task.Delay(500);
        Console.WriteLine($"Method 3 {name}");
    }
    private async Task Method4Console(string name)
    {
        await Task.Delay(500);
        Console.WriteLine($"Method 4 {name}");
    }
}
